{"version":3,"file":"static/js/114.7d6b084b.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.jsx","components/error/Error.jsx","components/comicsList/ComicsList.jsx","components/appBanner/AppBanner.jsx","components/pages/ComicsPage.jsx","services/MarvelService.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport Error from \"../error/Error\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            errorInfo: null,\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState((state) => ({ error, errorInfo }));\r\n    }\r\n\r\n    render() {\r\n        const { error, errorInfo } = this.state;\r\n        const { children } = this.props;\r\n\r\n        if (errorInfo) {\r\n            return <Error />;\r\n        }\r\n\r\n        return children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import gif from \"../../resources/error.gif\";\r\nimport \"./error.scss\";\r\n\r\nconst Error = () => {\r\n    return <img className='error__img' src={gif} alt='Error' />;\r\n};\r\n\r\nexport default Error;\r\n","import \"./comicsList.scss\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Preloader from \"../preloader/Preloader\";\r\nimport Error from \"../error/Error\";\r\n\r\nconst ComicsList = ({ comicsList, updateComicsList }) => {\r\n    const { loader, error, clearError, getAllComicsData } = useMarvelService();\r\n    const [offset, setOffset] = useState(200);\r\n    const [newComics, setNewComics] = useState(false);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [delayCounter, setDelayCounter] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        getAllComics(true);\r\n    }, []);\r\n\r\n    const getAllComics = (initial) => {\r\n        clearError();\r\n        initial ? setNewComics(false) : setNewComics(true);\r\n        getAllComicsData(offset)\r\n            .then((comicsData) => updateComicsList(comicsData.data.results))\r\n            .then(() => finallyUpdate());\r\n    };\r\n\r\n    const finallyUpdate = () => {\r\n        setOffset(offset + 8);\r\n        setDisabled(false);\r\n        setNewComics(true);\r\n    };\r\n\r\n    const updateComicsHandler = () => {\r\n        setInProp(!inProp);\r\n        setDisabled(true);\r\n        setDelayCounter((delayCounter) => delayCounter + 1);\r\n        getAllComics();\r\n    };\r\n\r\n    const preloader = loader && !newComics ? <Preloader /> : null;\r\n\r\n    const errorComp = error && <Error />;\r\n\r\n    const [inProp, setInProp] = useState(false);\r\n\r\n    const durationComics = 1000;\r\n    let delayIndex = -1;\r\n    const delayJump = 100;\r\n    let delayDifference = delayCounter * 800;\r\n\r\n    return (\r\n        <div className='comics__list'>\r\n            <TransitionGroup className='comics__grid'>\r\n                {comicsList.map((el, i) => {\r\n                    delayIndex += newComics ? 1 : 0;\r\n                    const delay = Math.floor(\r\n                        Math.max(0, delayIndex * delayJump - delayDifference)\r\n                    );\r\n                    return (\r\n                        <CSSTransition\r\n                            key={el.id}\r\n                            classNames='my-comics'\r\n                            timeout={durationComics + delay}>\r\n                            <li\r\n                                className='comics__item'\r\n                                style={{ transitionDelay: `${delay}ms` }}>\r\n                                <Link to={`/comics/${el.id}`}>\r\n                                    <img\r\n                                        src={`${el.thumbnail.path}.${el.thumbnail.extension}`}\r\n                                        alt={el.name}\r\n                                        className='comics__item-img'\r\n                                    />\r\n                                    <div className='comics__item-name'>\r\n                                        {el.title}\r\n                                    </div>\r\n                                    <div className='comics__item-price'>\r\n                                        {!el.price\r\n                                            ? \"Not Available\"\r\n                                            : `${el.price}$`}\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                        </CSSTransition>\r\n                    );\r\n                })}\r\n                {errorComp}\r\n            </TransitionGroup>\r\n\r\n            {preloader}\r\n\r\n            {newComics && (\r\n                <button\r\n                    disabled={disabled}\r\n                    onClick={updateComicsHandler}\r\n                    className='button button__main button__long'>\r\n                    <div className='inner'>load more</div>\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComicsList;\r\n","import \"./appBanner.scss\";\r\nimport avengers from \"../../resources/img/Avengers.png\";\r\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className='app__banner'>\r\n            <img src={avengers} alt='Avengers' />\r\n            <div className='app__banner-text'>\r\n                New comics every week!\r\n                <br />\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt='Avengers logo' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppBanner;\r\n","import { useState } from \"react\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n    const [comicsList, setComicsList] = useState([]);\r\n\r\n    const updateComicsList = (comicsList) => {\r\n        setComicsList((comics) => [...comics, ...comicsList]);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet='utf-8' name='descrition' />\r\n                <title>Comicses Page</title>\r\n            </Helmet>\r\n            <ErrorBoundary>\r\n                <AppBanner />\r\n            </ErrorBoundary>\r\n\r\n            <ErrorBoundary>\r\n                <ComicsList\r\n                    comicsList={comicsList}\r\n                    updateComicsList={updateComicsList}\r\n                />\r\n            </ErrorBoundary>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const { loader, error, request, clearError } = useHttp();\r\n\r\n    const _Apikey = \"apikey=75aef817f3e41428518bd4e3781b08d1\";\r\n    const _Apibase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _baseOffset = 660;\r\n\r\n    // Characters\r\n\r\n    const getAllChars = async (name) => {\r\n        const response = await request(\r\n            `${_Apibase}characters?name=${name}&${_Apikey}`\r\n        );\r\n\r\n        return response.data.results.map(_transformChar);\r\n    };\r\n\r\n    const getAllCharactersData = async (offset = _baseOffset) => {\r\n        const response = await request(\r\n            `${_Apibase}characters?limit=9&offset=${offset}&${_Apikey}`\r\n        );\r\n        return response.data.results.map(_transformChar);\r\n    };\r\n\r\n    const getCharacterByIdData = async (id) => {\r\n        const response = await request(\r\n            `${_Apibase}characters/${id}?${_Apikey}`\r\n        );\r\n        return _transformChar(response.data.results[0]);\r\n    };\r\n\r\n    const getRandomCharacter = async () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\r\n        const response = await request(\r\n            `${_Apibase}characters/${id}?${_Apikey}`\r\n        );\r\n        return _transformChar(response.data.results[0]);\r\n    };\r\n\r\n    // Comicses\r\n    const getAllComicsData = (offset = 200) => {\r\n        return request(`${_Apibase}comics?limit=8&offset=${offset}&${_Apikey}`);\r\n    };\r\n    const getComicsByIdData = async (id) => {\r\n        const response = await request(`${_Apibase}comics/${id}?${_Apikey}`);\r\n        return _transformComics(response.data.results[0]);\r\n    };\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            title: comics.title,\r\n            description: _transformText(comics.description),\r\n            id: comics.id,\r\n            thumbnail: `${comics.images[0].path}.${comics.images[0].extension}`,\r\n            price: `${comics.prices[0].price}$`,\r\n            pages: `${comics.pageCount}pages`,\r\n        };\r\n    };\r\n\r\n    const _transformChar = (data) => {\r\n        const comics = data.comics.items.map((el) => el.name);\r\n\r\n        return {\r\n            description: _transformText(data.description),\r\n            id: data.id,\r\n            title: data.name,\r\n            thumbnail: `${data.thumbnail.path}.${data.thumbnail.extension}`,\r\n            homepage: data.urls[0].url,\r\n            wiki: data.urls[1].url,\r\n            comics,\r\n        };\r\n    };\r\n\r\n    const _transformText = (text) => {\r\n        return !text\r\n            ? \"Sorry...We don't have description for this one...\"\r\n            : `${text.slice(0, 230)}...`;\r\n    };\r\n\r\n    return {\r\n        getAllChars,\r\n        getRandomCharacter,\r\n        getAllCharactersData,\r\n        getCharacterByIdData,\r\n        getAllComicsData,\r\n        getComicsByIdData,\r\n        clearError,\r\n        loader,\r\n        error,\r\n    };\r\n};\r\n\r\nexport default useMarvelService;\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}"],"names":["ErrorBoundary","props","state","error","errorInfo","this","setState","children","Component","className","src","gif","alt","comicsList","updateComicsList","useMarvelService","loader","clearError","getAllComicsData","useState","offset","setOffset","newComics","setNewComics","disabled","setDisabled","delayCounter","setDelayCounter","useEffect","getAllComics","initial","then","comicsData","data","results","finallyUpdate","preloader","Preloader","errorComp","Error","inProp","setInProp","delayIndex","delayDifference","TransitionGroup","map","el","i","delay","Math","floor","max","CSSTransition","classNames","timeout","style","transitionDelay","to","id","thumbnail","path","extension","name","title","price","onClick","avengers","avengersLogo","setComicsList","Helmet","charSet","comics","useHttp","request","_Apikey","_Apibase","getAllChars","response","_transformChar","getAllCharactersData","getCharacterByIdData","getRandomCharacter","random","getComicsByIdData","_transformComics","description","_transformText","images","prices","pages","pageCount","items","homepage","urls","url","wiki","text","slice","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_possibleConstructorReturn","self","call","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","constructor","Reflect","construct","arguments","apply","_getPrototypeOf","o","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","value","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","e"],"sourceRoot":""}